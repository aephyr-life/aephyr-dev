21 errors found
[[0minfo[0m] entering *experimental* thin client - BEEP WHIRR
[[0minfo[0m] terminate the server with `shutdown`
> http-server/compile
[info] compiling 20 Scala sources to /Users/martin/Aephyr/aephyr-dev/server/modules/http/server/target/scala-3.3.6/classes ...[0J
[0J[error] -- [E007] Type Mismatch Error: /Users/martin/Aephyr/aephyr-dev/server/modules/http/server/src/main/scala/aephyr/http/server/HttpServer.scala:22:8 [0J
[0J[error] 22 |        cfg  <- ZIO.service[AppConfig][0J
[0J[error]    |        ^[0J
[0J[error]    |Found:    zio.ZIO[aephyr.shared.config.AppConfig, Throwable, Unit][0J
[0J[error]    |Required: zio.ZIO[zio.Scope & (zio.ZIOAppArgs & zio.Scope), Nothing, Nothing][0J
[0J[error] 23 |        port  = cfg.http.port[0J
[0J[error] 24 |        _    <- program(port)[0J
[0J[error] 25 |          .provideSomeLayer(HttpAppLayers.dev)[0J
[0J[error] 26 |          .tap(_ => ZIO.logInfo(s"ðŸš€ HTTP on :$port"))[0J
[0J[error] 27 |          .onInterrupt(ZIO.logInfo("ðŸ“¥ interrupt received"))[0J
[0J[error] 28 |      } yield ()[0J
[0J[error]    |----------------------------------------------------------------------------[0J
[0J[error]    | Explanation (enabled by `-explain`)[0J
[0J[error]    |- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -[0J
[0J[error]    |[0J
[0J[error]    | Tree: zio.ZIO.service[aephyr.shared.config.AppConfig]([0J
[0J[error]    |   zio.Tag.apply[aephyr.shared.config.AppConfig]([0J
[0J[error]    |     izumi.reflect.Tag.tagFromTagMacro[aephyr.shared.config.AppConfig]),[0J
[0J[error]    |   zio.internal.stacktracer.Tracer.autoTrace).map[[0J
[0J[error]    |   (aephyr.shared.config.AppConfig, Int)]([0J
[0J[error]    |   {[0J
[0J[error]    |     def $anonfun(cfg: aephyr.shared.config.AppConfig):[0J
[0J[error]    |       (aephyr.shared.config.AppConfig, Int) =[0J
[0J[error]    |       {[0J
[0J[error]    |         val port: Int = cfg.http.port[0J
[0J[error]    |         Tuple2.apply[aephyr.shared.config.AppConfig, Int](cfg, port)[0J
[0J[error]    |       }[0J
[0J[error]    |     closure($anonfun)[0J
[0J[error]    |   }[0J
[0J[error]    | )(zio.internal.stacktracer.Tracer.autoTrace).flatMap[[0J
[0J[error]    |   aephyr.shared.config.AppConfig, Throwable, Unit]([0J
[0J[error]    |   {[0J
[0J[error]    |     def $anonfun(x$1: (aephyr.shared.config.AppConfig, Int)):[0J
[0J[error]    |       zio.ZIO[aephyr.shared.config.AppConfig, Throwable, Unit] =[0J
[0J[error]    |       x$1:(x$1 : (aephyr.shared.config.AppConfig, Int)) @unchecked match [0J
[0J[error]    |         {[0J
[0J[error]    |           case [0J
[0J[error]    |             Tuple2.unapply[aephyr.shared.config.AppConfig, Int](cfg @ _,[0J
[0J[error]    |               port @ _)[0J
[0J[error]    |            =>[0J
[0J[error]    |             aephyr.http.server.HttpServer.program(port).provideSomeLayer[Any].[0J
[0J[error]    |               apply[Throwable,[0J
[0J[error]    |               [0J
[0J[error]    |                 aephyr.http.server.endpoint.HttpTypes.PublicEnv &[0J
[0J[error]    |                   aephyr.http.server.endpoint.HttpTypes.IdentityEnv[0J
[0J[error]    |               [0J
[0J[error]    |             ](aephyr.http.server.wiring.HttpAppLayers.dev)([0J
[0J[error]    |               <:<.refl[[0J
[0J[error]    |                 [0J
[0J[error]    |                   aephyr.http.server.endpoint.HttpTypes.PublicEnv &[0J
[0J[error]    |                     aephyr.http.server.endpoint.HttpTypes.IdentityEnv[0J
[0J[error]    |                 [0J
[0J[error]    |               ],[0J
[0J[error]    |               izumi.reflect.Tag.tagFromTagMacro[[0J
[0J[error]    |                 [0J
[0J[error]    |                   aephyr.http.server.endpoint.HttpTypes.PublicEnv &[0J
[0J[error]    |                     aephyr.http.server.endpoint.HttpTypes.IdentityEnv[0J
[0J[error]    |                 [0J
[0J[error]    |               ],[0J
[0J[error]    |             zio.internal.stacktracer.Tracer.autoTrace).tap[Any, Throwable]([0J
[0J[error]    |               {[0J
[0J[error]    |                 def $anonfun(_$1: Unit): zio.ZIO[Any, Throwable, Any] =[0J
[0J[error]    |                   zio.ZIO.logInfo([0J
[0J[error]    |                     _root_.scala.StringContext.apply([0J
[0J[error]    |                       ["ðŸš€ HTTP on :","" : String]*).s([port : Any]*)[0J
[0J[error]    |                   )(zio.internal.stacktracer.Tracer.autoTrace)[0J
[0J[error]    |                 closure($anonfun)[0J
[0J[error]    |               }[0J
[0J[error]    |             )(zio.internal.stacktracer.Tracer.autoTrace).onInterrupt[Any]([0J
[0J[error]    |               zio.ZIO.logInfo("ðŸ“¥ interrupt received")([0J
[0J[error]    |                 zio.internal.stacktracer.Tracer.autoTrace)[0J
[0J[error]    |             )(zio.internal.stacktracer.Tracer.autoTrace).map[Unit]([0J
[0J[error]    |               {[0J
[0J[error]    |                 def $anonfun(x$1: Unit): Unit =[0J
[0J[error]    |                   x$1:Unit @unchecked match [0J
[0J[error]    |                     {[0J
[0J[error]    |                       case _ => ()[0J
[0J[error]    |                     }[0J
[0J[error]    |                 closure($anonfun)[0J
[0J[error]    |               }[0J
[0J[error]    |             )(zio.internal.stacktracer.Tracer.autoTrace)[0J
[0J[error]    |         }[0J
[0J[error]    |     closure($anonfun)[0J
[0J[error]    |   }[0J
[0J[error]    | )(zio.internal.stacktracer.Tracer.autoTrace)[0J
[0J[error]    | I tried to show that[0J
[0J[error]    |   zio.ZIO[aephyr.shared.config.AppConfig, Throwable, Unit][0J
[0J[error]    | conforms to[0J
[0J[error]    |   zio.ZIO[zio.Scope & (zio.ZIOAppArgs & zio.Scope), Nothing, Nothing][0J
[0J[error]    | but none of the attempts shown below succeeded:[0J
[0J[error]    |[0J
[0J[error]    |   ==> zio.ZIO[aephyr.shared.config.AppConfig, Throwable, Unit]  <:  zio.ZIO[zio.Scope & (zio.ZIOAppArgs & zio.Scope), Nothing, Nothing][0J
[0J[error]    |     ==> Throwable  <:  Nothing  = false[0J
[0J[error]    |[0J
[0J[error]    | The tests were made under a constraint with:[0J
[0J[error]    |  uninstantiated variables: E, A[0J
[0J[error]    |  constrained types: [R]: zio.ZIO.ScopedPartiallyApplied[R],[0J
[0J[error]    |   [E, A][0J
[0J[error]    |     (zio: => zio.ZIO[zio.Scope & (zio.ZIOAppArgs & zio.Scope), E, A])[0J
[0J[error]    |       (implicit trace: zio.Trace): zio.ZIO[zio.ZIOAppArgs & zio.Scope, E, A][0J
[0J[error]    |   ,[0J
[0J[error]    |   [R1 <: zio.Scope, E1, B][0J
[0J[error]    |     (k: Any => zio.ZIO[R1, E1, B])[0J
[0J[error]    |       (implicit trace: zio.Trace): zio.ZIO[R1, E1, B][0J
[0J[error]    |  bounds:[0J
[0J[error]    |      R := zio.ZIOAppArgs & zio.Scope[0J
[0J[error]    |      E <: Nothing[0J
[0J[error]    |      A <: Nothing[0J
[0J[error]    |      R1 := zio.Scope & (zio.ZIOAppArgs & zio.Scope)[0J
[0J[error]    |      E1 := Nothing[0J
[0J[error]    |      B := Nothing[0J
[0J[error]    |  ordering:[0J
[0J[error]    |      E1 <: E[0J
[0J[error]    |      B <: A[0J
[0J[error]    |  co-deps:[0J
[0J[error]    |  contra-deps:[0J
[0J[error]     ----------------------------------------------------------------------------[0J
[0J[error] -- [E006] Not Found Error: /Users/martin/Aephyr/aephyr-dev/server/modules/http/server/src/main/scala/aephyr/http/server/endpoint/HttpHandler.scala:22:54 [0J
[0J[error] 22 |  val documented: List[ZServerEndpoint[DocumentedEnv, HttpCaps]] =[0J
[0J[error]    |                                                      ^^^^^^^^[0J
[0J[error]    |                                                Not found: type HttpCaps[0J
[0J[error]    |----------------------------------------------------------------------------[0J
[0J[error]    | Explanation (enabled by `-explain`)[0J
[0J[error]    |- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -[0J
[0J[error]    | Each identifier in Scala needs a matching declaration. There are two kinds of[0J
[0J[error]    | identifiers: type identifiers and value identifiers. Value identifiers are introduced[0J
[0J[error]    | by `val`, `def`, or `object` declarations. Type identifiers are introduced by `type`,[0J
[0J[error]    | `class`, `enum`, or `trait` declarations.[0J
[0J[error]    |[0J
[0J[error]    | Identifiers refer to matching declarations in their environment, or they can be[0J
[0J[error]    | imported from elsewhere.[0J
[0J[error]    |[0J
[0J[error]    | Possible reasons why no matching declaration was found:[0J
[0J[error]    |  - The declaration or the use is mis-spelt.[0J
[0J[error]    |  - An import is missing.[0J
[0J[error]     ----------------------------------------------------------------------------[0J
[0J[error] -- [E006] Not Found Error: /Users/martin/Aephyr/aephyr-dev/server/modules/http/server/src/main/scala/aephyr/http/server/endpoint/ops/OpsHandler.scala:8:9 [0J
[0J[error] 8 |  import HttpTypes.*[0J
[0J[error]   |         ^^^^^^^^^[0J
[0J[error]   |         Not found: HttpTypes[0J
[0J[error]   |-----------------------------------------------------------------------------[0J
[0J[error]   | Explanation (enabled by `-explain`)[0J
[0J[error]   |- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -[0J
[0J[error]   | Each identifier in Scala needs a matching declaration. There are two kinds of[0J
[0J[error]   | identifiers: type identifiers and value identifiers. Value identifiers are introduced[0J
[0J[error]   | by `val`, `def`, or `object` declarations. Type identifiers are introduced by `type`,[0J
[0J[error]   | `class`, `enum`, or `trait` declarations.[0J
[0J[error]   |[0J
[0J[error]   | Identifiers refer to matching declarations in their environment, or they can be[0J
[0J[error]   | imported from elsewhere.[0J
[0J[error]   |[0J
[0J[error]   | Possible reasons why no matching declaration was found:[0J
[0J[error]   |  - The declaration or the use is mis-spelt.[0J
[0J[error]   |  - An import is missing.[0J
[0J[error]    -----------------------------------------------------------------------------[0J
[0J[error] -- [E006] Not Found Error: /Users/martin/Aephyr/aephyr-dev/server/modules/http/server/src/main/scala/aephyr/http/server/endpoint/HttpHandler.scala:28:58 [0J
[0J[error] 28 |  val undocumented: List[ZServerEndpoint[UndocumentedEnv, HttpCaps]] =[0J
[0J[error]    |                                                          ^^^^^^^^[0J
[0J[error]    |                                                Not found: type HttpCaps[0J
[0J[error]    |----------------------------------------------------------------------------[0J
[0J[error]    | Explanation (enabled by `-explain`)[0J
[0J[error]    |- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -[0J
[0J[error]    | Each identifier in Scala needs a matching declaration. There are two kinds of[0J
[0J[error]    | identifiers: type identifiers and value identifiers. Value identifiers are introduced[0J
[0J[error]    | by `val`, `def`, or `object` declarations. Type identifiers are introduced by `type`,[0J
[0J[error]    | `class`, `enum`, or `trait` declarations.[0J
[0J[error]    |[0J
[0J[error]    | Identifiers refer to matching declarations in their environment, or they can be[0J
[0J[error]    | imported from elsewhere.[0J
[0J[error]    |[0J
[0J[error]    | Possible reasons why no matching declaration was found:[0J
[0J[error]    |  - The declaration or the use is mis-spelt.[0J
[0J[error]    |  - An import is missing.[0J
[0J[error]     ----------------------------------------------------------------------------[0J
[0J[error] -- [E006] Not Found Error: /Users/martin/Aephyr/aephyr-dev/server/modules/http/server/src/main/scala/aephyr/http/server/endpoint/www/WellKnownHandler.scala:11:9 [0J
[0J[error] 11 |  import HttpTypes.*[0J
[0J[error]    |         ^^^^^^^^^[0J
[0J[error]    |         Not found: HttpTypes[0J
[0J[error]    |----------------------------------------------------------------------------[0J
[0J[error]    | Explanation (enabled by `-explain`)[0J
[0J[error]    |- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -[0J
[0J[error]    | Each identifier in Scala needs a matching declaration. There are two kinds of[0J
[0J[error]    | identifiers: type identifiers and value identifiers. Value identifiers are introduced[0J
[0J[error]    | by `val`, `def`, or `object` declarations. Type identifiers are introduced by `type`,[0J
[0J[error]    | `class`, `enum`, or `trait` declarations.[0J
[0J[error]    |[0J
[0J[error]    | Identifiers refer to matching declarations in their environment, or they can be[0J
[0J[error]    | imported from elsewhere.[0J
[0J[error]    |[0J
[0J[error]    | Possible reasons why no matching declaration was found:[0J
[0J[error]    |  - The declaration or the use is mis-spelt.[0J
[0J[error]    |  - An import is missing.[0J
[0J[error]     ----------------------------------------------------------------------------[0J
[0J[error] -- [E006] Not Found Error: /Users/martin/Aephyr/aephyr-dev/server/modules/http/server/src/main/scala/aephyr/http/server/endpoint/HttpHandler.scala:35:46 [0J
[0J[error] 35 |  val public: List[ZServerEndpoint[PublicEnv, HttpCaps]] =[0J
[0J[error]    |                                              ^^^^^^^^[0J
[0J[error]    |                                              Not found: type HttpCaps[0J
[0J[error]    |----------------------------------------------------------------------------[0J
[0J[error]    | Explanation (enabled by `-explain`)[0J
[0J[error]    |- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -[0J
[0J[error]    | Each identifier in Scala needs a matching declaration. There are two kinds of[0J
[0J[error]    | identifiers: type identifiers and value identifiers. Value identifiers are introduced[0J
[0J[error]    | by `val`, `def`, or `object` declarations. Type identifiers are introduced by `type`,[0J
[0J[error]    | `class`, `enum`, or `trait` declarations.[0J
[0J[error]    |[0J
[0J[error]    | Identifiers refer to matching declarations in their environment, or they can be[0J
[0J[error]    | imported from elsewhere.[0J
[0J[error]    |[0J
[0J[error]    | Possible reasons why no matching declaration was found:[0J
[0J[error]    |  - The declaration or the use is mis-spelt.[0J
[0J[error]    |  - An import is missing.[0J
[0J[error]     ----------------------------------------------------------------------------[0J
[0J[error] -- [E006] Not Found Error: /Users/martin/Aephyr/aephyr-dev/server/modules/http/server/src/main/scala/aephyr/http/server/endpoint/HttpHandler.scala:37:64 [0J
[0J[error] 37 |      undocumented.asInstanceOf[List[ZServerEndpoint[PublicEnv, HttpCaps]]][0J
[0J[error]    |                                                                ^^^^^^^^[0J
[0J[error]    |                                                Not found: type HttpCaps[0J
[0J[error]    |----------------------------------------------------------------------------[0J
[0J[error]    | Explanation (enabled by `-explain`)[0J
[0J[error]    |- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -[0J
[0J[error]    | Each identifier in Scala needs a matching declaration. There are two kinds of[0J
[0J[error]    | identifiers: type identifiers and value identifiers. Value identifiers are introduced[0J
[0J[error]    | by `val`, `def`, or `object` declarations. Type identifiers are introduced by `type`,[0J
[0J[error]    | `class`, `enum`, or `trait` declarations.[0J
[0J[error]    |[0J
[0J[error]    | Identifiers refer to matching declarations in their environment, or they can be[0J
[0J[error]    | imported from elsewhere.[0J
[0J[error]    |[0J
[0J[error]    | Possible reasons why no matching declaration was found:[0J
[0J[error]    |  - The declaration or the use is mis-spelt.[0J
[0J[error]    |  - An import is missing.[0J
[0J[error]     ----------------------------------------------------------------------------[0J
[0J[error] -- [E006] Not Found Error: /Users/martin/Aephyr/aephyr-dev/server/modules/http/server/src/main/scala/aephyr/http/server/endpoint/HttpHandler.scala:43:50 [0J
[0J[error] 43 |  val identity: List[ZServerEndpoint[IdentityEnv, HttpCaps]] =[0J
[0J[error]    |                                                  ^^^^^^^^[0J
[0J[error]    |                                                Not found: type HttpCaps[0J
[0J[error]    |----------------------------------------------------------------------------[0J
[0J[error]    | Explanation (enabled by `-explain`)[0J
[0J[error]    |- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -[0J
[0J[error]    | Each identifier in Scala needs a matching declaration. There are two kinds of[0J
[0J[error]    | identifiers: type identifiers and value identifiers. Value identifiers are introduced[0J
[0J[error]    | by `val`, `def`, or `object` declarations. Type identifiers are introduced by `type`,[0J
[0J[error]    | `class`, `enum`, or `trait` declarations.[0J
[0J[error]    |[0J
[0J[error]    | Identifiers refer to matching declarations in their environment, or they can be[0J
[0J[error]    | imported from elsewhere.[0J
[0J[error]    |[0J
[0J[error]    | Possible reasons why no matching declaration was found:[0J
[0J[error]    |  - The declaration or the use is mis-spelt.[0J
[0J[error]    |  - An import is missing.[0J
[0J[error]     ----------------------------------------------------------------------------[0J
[0J[error] -- [E006] Not Found Error: /Users/martin/Aephyr/aephyr-dev/server/modules/http/server/src/main/scala/aephyr/http/server/endpoint/identity/MeHandler.scala:10:9 [0J
[0J[error] 10 |  import HttpTypes.*[0J
[0J[error]    |         ^^^^^^^^^[0J
[0J[error]    |         Not found: HttpTypes[0J
[0J[error]    |----------------------------------------------------------------------------[0J
[0J[error]    | Explanation (enabled by `-explain`)[0J
[0J[error]    |- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -[0J
[0J[error]    | Each identifier in Scala needs a matching declaration. There are two kinds of[0J
[0J[error]    | identifiers: type identifiers and value identifiers. Value identifiers are introduced[0J
[0J[error]    | by `val`, `def`, or `object` declarations. Type identifiers are introduced by `type`,[0J
[0J[error]    | `class`, `enum`, or `trait` declarations.[0J
[0J[error]    |[0J
[0J[error]    | Identifiers refer to matching declarations in their environment, or they can be[0J
[0J[error]    | imported from elsewhere.[0J
[0J[error]    |[0J
[0J[error]    | Possible reasons why no matching declaration was found:[0J
[0J[error]    |  - The declaration or the use is mis-spelt.[0J
[0J[error]    |  - An import is missing.[0J
[0J[error]     ----------------------------------------------------------------------------[0J
[0J[error] -- [E008] Not Found Error: /Users/martin/Aephyr/aephyr-dev/server/modules/http/server/src/main/scala/aephyr/http/server/endpoint/HttpRoutes.scala:59:30 [0J
[0J[error] 59 |    widenEnv[Env, HttpHandler.PublicEnv](publicRoutes) ++[0J
[0J[error]    |                  ^^^^^^^^^^^^^^^^^^^^^[0J
[0J[error]    |type PublicEnv is not a member of object aephyr.http.server.endpoint.HttpHandler, but could be made available as an extension method.[0J
[0J[error]    |[0J
[0J[error]    |The following import might make progress towards fixing the problem:[0J
[0J[error]    |[0J
[0J[error]    |  import izumi.reflect.dottyreflection.ReflectionUtil.[0J
[0J[error]    |  reflectiveUncheckedNonOverloadedSelectable[0J
[0J[error]    |[0J
[0J[error] -- [E008] Not Found Error: /Users/martin/Aephyr/aephyr-dev/server/modules/http/server/src/main/scala/aephyr/http/server/endpoint/HttpRoutes.scala:60:32 [0J
[0J[error] 60 |      widenEnv[Env, HttpHandler.IdentityEnv](identityRoutes) ++[0J
[0J[error]    |                    ^^^^^^^^^^^^^^^^^^^^^^^[0J
[0J[error]    |type IdentityEnv is not a member of object aephyr.http.server.endpoint.HttpHandler, but could be made available as an extension method.[0J
[0J[error]    |[0J
[0J[error]    |The following import might make progress towards fixing the problem:[0J
[0J[error]    |[0J
[0J[error]    |  import izumi.reflect.dottyreflection.ReflectionUtil.[0J
[0J[error]    |  reflectiveUncheckedNonOverloadedSelectable[0J
[0J[error]    |[0J
[0J[error] -- [E006] Not Found Error: /Users/martin/Aephyr/aephyr-dev/server/modules/http/server/src/main/scala/aephyr/http/server/endpoint/HttpTypes.scala:12:14 [0J
[0J[error] 12 |  type Caps = ZioStreams & WebSockets[0J
[0J[error]    |              ^^^^^^^^^^[0J
[0J[error]    |              Not found: type ZioStreams[0J
[0J[error]    |----------------------------------------------------------------------------[0J
[0J[error]    | Explanation (enabled by `-explain`)[0J
[0J[error]    |- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -[0J
[0J[error]    | Each identifier in Scala needs a matching declaration. There are two kinds of[0J
[0J[error]    | identifiers: type identifiers and value identifiers. Value identifiers are introduced[0J
[0J[error]    | by `val`, `def`, or `object` declarations. Type identifiers are introduced by `type`,[0J
[0J[error]    | `class`, `enum`, or `trait` declarations.[0J
[0J[error]    |[0J
[0J[error]    | Identifiers refer to matching declarations in their environment, or they can be[0J
[0J[error]    | imported from elsewhere.[0J
[0J[error]    |[0J
[0J[error]    | Possible reasons why no matching declaration was found:[0J
[0J[error]    |  - The declaration or the use is mis-spelt.[0J
[0J[error]    |  - An import is missing.[0J
[0J[error]     ----------------------------------------------------------------------------[0J
[0J[error] -- [E006] Not Found Error: /Users/martin/Aephyr/aephyr-dev/server/modules/http/server/src/main/scala/aephyr/http/server/endpoint/HttpTypes.scala:12:27 [0J
[0J[error] 12 |  type Caps = ZioStreams & WebSockets[0J
[0J[error]    |                           ^^^^^^^^^^[0J
[0J[error]    |                           Not found: type WebSockets[0J
[0J[error]    |----------------------------------------------------------------------------[0J
[0J[error]    | Explanation (enabled by `-explain`)[0J
[0J[error]    |- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -[0J
[0J[error]    | Each identifier in Scala needs a matching declaration. There are two kinds of[0J
[0J[error]    | identifiers: type identifiers and value identifiers. Value identifiers are introduced[0J
[0J[error]    | by `val`, `def`, or `object` declarations. Type identifiers are introduced by `type`,[0J
[0J[error]    | `class`, `enum`, or `trait` declarations.[0J
[0J[error]    |[0J
[0J[error]    | Identifiers refer to matching declarations in their environment, or they can be[0J
[0J[error]    | imported from elsewhere.[0J
[0J[error]    |[0J
[0J[error]    | Possible reasons why no matching declaration was found:[0J
[0J[error]    |  - The declaration or the use is mis-spelt.[0J
[0J[error]    |  - An import is missing.[0J
[0J[error]     ----------------------------------------------------------------------------[0J
[0J[error] -- [E006] Not Found Error: /Users/martin/Aephyr/aephyr-dev/server/modules/http/server/src/main/scala/aephyr/http/server/endpoint/HttpTypes.scala:14:16 [0J
[0J[error] 14 |  type ZSE[R] = ZServerEndpoint[R, Caps][0J
[0J[error]    |                ^^^^^^^^^^^^^^^[0J
[0J[error]    |                Not found: type ZServerEndpoint[0J
[0J[error]    |----------------------------------------------------------------------------[0J
[0J[error]    | Explanation (enabled by `-explain`)[0J
[0J[error]    |- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -[0J
[0J[error]    | Each identifier in Scala needs a matching declaration. There are two kinds of[0J
[0J[error]    | identifiers: type identifiers and value identifiers. Value identifiers are introduced[0J
[0J[error]    | by `val`, `def`, or `object` declarations. Type identifiers are introduced by `type`,[0J
[0J[error]    | `class`, `enum`, or `trait` declarations.[0J
[0J[error]    |[0J
[0J[error]    | Identifiers refer to matching declarations in their environment, or they can be[0J
[0J[error]    | imported from elsewhere.[0J
[0J[error]    |[0J
[0J[error]    | Possible reasons why no matching declaration was found:[0J
[0J[error]    |  - The declaration or the use is mis-spelt.[0J
[0J[error]    |  - An import is missing.[0J
[0J[error]     ----------------------------------------------------------------------------[0J
[0J[error] -- [E006] Not Found Error: /Users/martin/Aephyr/aephyr-dev/server/modules/http/server/src/main/scala/aephyr/http/server/endpoint/identity/WebAuthnHandler.scala:9:9 [0J
[0J[error] 9 |  import HttpTypes.*[0J
[0J[error]   |         ^^^^^^^^^[0J
[0J[error]   |         Not found: HttpTypes[0J
[0J[error]   |-----------------------------------------------------------------------------[0J
[0J[error]   | Explanation (enabled by `-explain`)[0J
[0J[error]   |- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -[0J
[0J[error]   | Each identifier in Scala needs a matching declaration. There are two kinds of[0J
[0J[error]   | identifiers: type identifiers and value identifiers. Value identifiers are introduced[0J
[0J[error]   | by `val`, `def`, or `object` declarations. Type identifiers are introduced by `type`,[0J
[0J[error]   | `class`, `enum`, or `trait` declarations.[0J
[0J[error]   |[0J
[0J[error]   | Identifiers refer to matching declarations in their environment, or they can be[0J
[0J[error]   | imported from elsewhere.[0J
[0J[error]   |[0J
[0J[error]   | Possible reasons why no matching declaration was found:[0J
[0J[error]   |  - The declaration or the use is mis-spelt.[0J
[0J[error]   |  - An import is missing.[0J
[0J[error]    -----------------------------------------------------------------------------[0J
[0J[error] -- [E007] Type Mismatch Error: /Users/martin/Aephyr/aephyr-dev/server/modules/http/server/src/main/scala/aephyr/http/server/endpoint/www/StaticContract.scala:12:55 [0J
[0J[error] 12 |      .out(stringBodyUtf8AnyFormat(CodecFormat.TextHtml()))[0J
[0J[error]    |                                   ^^^^^^^^^^^^^^^^^^^^^^[0J
[0J[error]    |           Found:    sttp.tapir.CodecFormat.TextHtml[0J
[0J[error]    |           Required: sttp.tapir.Codec[String, T, sttp.tapir.CodecFormat][0J
[0J[error]    |[0J
[0J[error]    |           where:    T is a type variable[0J
[0J[error]    |----------------------------------------------------------------------------[0J
[0J[error]    | Explanation (enabled by `-explain`)[0J
[0J[error]    |- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -[0J
[0J[error]    |[0J
[0J[error]    | Tree: sttp.tapir.CodecFormat.TextHtml.apply()[0J
[0J[error]    | I tried to show that[0J
[0J[error]    |   sttp.tapir.CodecFormat.TextHtml[0J
[0J[error]    | conforms to[0J
[0J[error]    |   sttp.tapir.Codec[String, T, CF][0J
[0J[error]    | but none of the attempts shown below succeeded:[0J
[0J[error]    |[0J
[0J[error]    |   ==> sttp.tapir.CodecFormat.TextHtml  <:  sttp.tapir.Codec[String, T, CF]  = false[0J
[0J[error]    |[0J
[0J[error]    | The tests were made under a constraint with:[0J
[0J[error]    |  uninstantiated variables: T, CF[0J
[0J[error]    |  constrained types:[0J
[0J[error]    |   [T, CF <: sttp.tapir.CodecFormat][0J
[0J[error]    |     (codec: sttp.tapir.Codec[String, T, CF]):[0J
[0J[error]    |       sttp.tapir.EndpointIO.Body[String, T][0J
[0J[error]    |  bounds:[0J
[0J[error]    |      T[0J
[0J[error]    |      CF <: sttp.tapir.CodecFormat[0J
[0J[error]    |  ordering:[0J
[0J[error]    |  co-deps:[0J
[0J[error]    |  contra-deps:[0J
[0J[error]     ----------------------------------------------------------------------------[0J
[0J[error] -- [E007] Type Mismatch Error: /Users/martin/Aephyr/aephyr-dev/server/modules/http/server/src/main/scala/aephyr/http/server/endpoint/www/StaticHandler.scala:20:9 [0J
[0J[error] 20 |    List(testAuthn)[0J
[0J[error]    |         ^^^^^^^^^[0J
[0J[error]    |Found:    (aephyr.http.server.endpoint.www.StaticHandler.testAuthn :[0J
[0J[error]    |  sttp.tapir.ztapir.ZServerEndpoint[Nothing, Any])[0J
[0J[error]    |Required: sttp.tapir.serverÂ².ServerEndpoint[Any, [_] =>> zio.RIO[Any, _]][0J
[0J[error]    |[0J
[0J[error]    |where:    server  is a package in package aephyr.http[0J
[0J[error]    |          serverÂ² is a package in package sttp.tapir[0J
[0J[error]    |----------------------------------------------------------------------------[0J
[0J[error]    | Explanation (enabled by `-explain`)[0J
[0J[error]    |- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -[0J
[0J[error]    |[0J
[0J[error]    | Tree: aephyr.http.server.endpoint.www.StaticHandler.testAuthn[0J
[0J[error]    | I tried to show that[0J
[0J[error]    |   (aephyr.http.server.endpoint.www.StaticHandler.testAuthn :[0J
[0J[error]    |   sttp.tapir.ztapir.ZServerEndpoint[Nothing, Any])[0J
[0J[error]    | conforms to[0J
[0J[error]    |   sttp.tapir.server.ServerEndpoint[Any, [_] =>> zio.RIO[Any, _]][0J
[0J[error]    | but none of the attempts shown below succeeded:[0J
[0J[error]    |[0J
[0J[error]    |   ==> (aephyr.http.server.endpoint.www.StaticHandler.testAuthn :   sttp.tapir.ztapir.ZServerEndpoint[Nothing, Any])  <:  sttp.tapir.server.ServerEndpoint[Any, [_] =>> zio.RIO[Any, _]][0J
[0J[error]    |     ==> sttp.tapir.server.ServerEndpoint[Any, [_] =>> zio.RIO[Nothing, _]]  <:  sttp.tapir.server.ServerEndpoint[Any, [_] =>> zio.RIO[Any, _]][0J
[0J[error]    |       ==> [_] =>> zio.RIO[Nothing, _]  <:  [_] =>> zio.RIO[Any, _][0J
[0J[error]    |         ==> zio.RIO[Nothing, _]  <:  zio.RIO[Any, _][0J
[0J[error]    |           ==> Any  <:  Nothing  = false[0J
[0J[error]    |           ==> zio.RIO[Nothing, _]  <:  zio.ZIO[Any, Throwable, _][0J
[0J[error]    |             ==> zio.ZIO[Nothing, Throwable, _]  <:  zio.ZIO[Any, Throwable, _][0J
[0J[error]    |               ==> Any  <:  Nothing  = false[0J
[0J[error]    |[0J
[0J[error]    | The tests were made under a constraint with:[0J
[0J[error]    |  uninstantiated variables:[0J
[0J[error]    |  constrained types: [A](elems: A*): List[A][0J
[0J[error]    |  bounds:[0J
[0J[error]    |      A := sttp.tapir.server.ServerEndpoint[Any, [_] =>> zio.RIO[Any, _]][0J
[0J[error]    |  ordering:[0J
[0J[error]    |  co-deps:[0J
[0J[error]    |  contra-deps:[0J
[0J[error]     ----------------------------------------------------------------------------[0J
[0J[error] -- [E172] Type Error: /Users/martin/Aephyr/aephyr-dev/server/modules/http/server/src/main/scala/aephyr/http/server/endpoint/www/WellKnownContract.scala:14:25 [0J
[0J[error] 14 |      .out(jsonBody[Aasa])[0J
[0J[error]    |                         ^[0J
[0J[error]    |No given instance of type com.github.plokhotnyuk.jsoniter_scala.core.JsonValueCodec[[0J
[0J[error]    |  aephyr.http.server.endpoint.www.dto.Aasa] was found for a context parameter of method jsonBody in trait TapirJsonJsoniter[0J
[0J[error] -- [E007] Type Mismatch Error: /Users/martin/Aephyr/aephyr-dev/server/modules/http/server/src/main/scala/aephyr/http/server/wiring/HttpAppLayers.scala:17:4 [0J
[0J[error] 17 |    InfraLayers.live ++[0J
[0J[error]    |    ^[0J
[0J[error]    |Found:    zio.ZLayer[aephyr.shared.config.DbCfg, Throwable,[0J
[0J[error]    |  aephyr.http.server.wiring.infra.InfraLayers.Env &[0J
[0J[error]    |  aephyr.http.server.app.identity.MeService &[0J
[0J[error]    |  aephyr.auth.application.webauthn.WebAuthnService][0J
[0J[error]    |Required: zio.ZLayer[Any, Throwable, aephyr.http.server.wiring.HttpAppLayers.Env][0J
[0J[error] 18 |      MeLayers.dev ++[0J
[0J[error] 19 |      WebAuthnLayers.dev[0J
[0J[error]    |----------------------------------------------------------------------------[0J
[0J[error]    | Explanation (enabled by `-explain`)[0J
[0J[error]    |- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -[0J
[0J[error]    |[0J
[0J[error]    | Tree: aephyr.http.server.wiring.infra.InfraLayers.live.++[Throwable, Any,[0J
[0J[error]    |   aephyr.http.server.wiring.infra.InfraLayers.Env,[0J
[0J[error]    |   aephyr.http.server.app.identity.MeService]([0J
[0J[error]    |   aephyr.http.server.wiring.identity.MeLayers.dev)([0J
[0J[error]    |   izumi.reflect.Tag.tagFromTagMacro[aephyr.http.server.app.identity.MeService]).[0J
[0J[error]    |   ++[Throwable, Any,[0J
[0J[error]    |   [0J
[0J[error]    |     aephyr.http.server.wiring.infra.InfraLayers.Env &[0J
[0J[error]    |       aephyr.http.server.app.identity.MeService[0J
[0J[error]    |   ,[0J
[0J[error]    | aephyr.auth.application.webauthn.WebAuthnService]([0J
[0J[error]    |   aephyr.http.server.wiring.identity.WebAuthnLayers.dev)([0J
[0J[error]    |   izumi.reflect.Tag.tagFromTagMacro[[0J
[0J[error]    |     aephyr.auth.application.webauthn.WebAuthnService][0J
[0J[error]    | )[0J
[0J[error]    | I tried to show that[0J
[0J[error]    |   zio.ZLayer[aephyr.shared.config.DbCfg, Throwable,[0J
[0J[error]    |   aephyr.http.server.wiring.infra.InfraLayers.Env &[0J
[0J[error]    |   aephyr.http.server.app.identity.MeService &[0J
[0J[error]    |   aephyr.auth.application.webauthn.WebAuthnService][0J
[0J[error]    | conforms to[0J
[0J[error]    |   zio.ZLayer[Any, Throwable, aephyr.http.server.wiring.HttpAppLayers.Env][0J
[0J[error]    | but none of the attempts shown below succeeded:[0J
[0J[error]    |[0J
[0J[error]    |   ==> zio.ZLayer[aephyr.shared.config.DbCfg, Throwable,   aephyr.http.server.wiring.infra.InfraLayers.Env &   aephyr.http.server.app.identity.MeService &   aephyr.auth.application.webauthn.WebAuthnService]  <:  zio.ZLayer[Any, Throwable, aephyr.http.server.wiring.HttpAppLayers.Env][0J
[0J[error]    |     ==> Any  <:  aephyr.shared.config.DbCfg  = false[0J
[0J[error]    |[0J
[0J[error]    | The tests were made under the empty constraint[0J
[0J[error]     ----------------------------------------------------------------------------[0J
[0J[error] -- [E007] Type Mismatch Error: /Users/martin/Aephyr/aephyr-dev/server/modules/http/server/src/main/scala/aephyr/http/server/wiring/identity/WebAuthnLayers.scala:13:4 [0J
[0J[error] 13 |    InMemoryRelyingParty.live ++[0J
[0J[error]    |    ^[0J
[0J[error]    |Found:    zio.ZLayer[[0J
[0J[error]    |  aephyr.shared.config.AppConfig & com.yubico.webauthn.RelyingParty & ([0J
[0J[error]    |    aephyr.auth.ports.WebAuthnPlatform & aephyr.auth.ports.ChallengeStore) & ([0J
[0J[error]    |    aephyr.auth.ports.UserHandleRepo & aephyr.auth.ports.WebAuthnRepo &[0J
[0J[error]    |    zio.Clock),[0J
[0J[error]    |Throwable, aephyr.auth.ports.UserHandleRepo & aephyr.auth.ports.WebAuthnRepo &[0J
[0J[error]    |  aephyr.auth.ports.WebAuthnPlatform & (com.yubico.webauthn.RelyingParty &[0J
[0J[error]    |  aephyr.auth.ports.ChallengeStore &[0J
[0J[error]    |  aephyr.auth.application.webauthnÂ².WebAuthnService)][0J
[0J[error]    |Required: zio.ZLayer[Any, Throwable, aephyr.http.server.wiring.identity.WebAuthnLayers.Env[0J
[0J[error]    |  ][0J
[0J[error]    |[0J
[0J[error]    |where:    webauthn  is a package in package com.yubico[0J
[0J[error]    |          webauthnÂ² is a package in package aephyr.auth.application[0J
[0J[error] 14 |      InMemoryChallengeStore.live() ++[0J
[0J[error] 15 |      InMemoryUserHandleRepo.live ++[0J
[0J[error] 16 |      InMemoryWebAuthnRepo.live ++[0J
[0J[error] 17 |      WebAuthnPlatformYubico.layer ++[0J
[0J[error] 18 |      WebAuthnServiceLive.layer[0J
[0J[error]    |----------------------------------------------------------------------------[0J
[0J[error]    | Explanation (enabled by `-explain`)[0J
[0J[error]    |- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -[0J
[0J[error]    |[0J
[0J[error]    | Tree: aephyr.adapters.security.webauthn.memory.InMemoryRelyingParty.live.++[[0J
[0J[error]    |   Throwable, Any, com.yubico.webauthn.RelyingParty,[0J
[0J[error]    |   aephyr.auth.ports.ChallengeStore]([0J
[0J[error]    |   aephyr.adapters.security.webauthn.memory.InMemoryChallengeStore.live([0J
[0J[error]    |     aephyr.adapters.security.webauthn.memory.InMemoryChallengeStore.[0J
[0J[error]    |       live$default$1[0J
[0J[error]    |   )[0J
[0J[error]    | )(izumi.reflect.Tag.tagFromTagMacro[aephyr.auth.ports.ChallengeStore]).++[[0J
[0J[error]    |   Throwable, Any,[0J
[0J[error]    |   com.yubico.webauthn.RelyingParty & aephyr.auth.ports.ChallengeStore,[0J
[0J[error]    |   aephyr.auth.ports.UserHandleRepo]([0J
[0J[error]    |   aephyr.adapters.security.webauthn.memory.InMemoryUserHandleRepo.live)([0J
[0J[error]    |   izumi.reflect.Tag.tagFromTagMacro[aephyr.auth.ports.UserHandleRepo]).++[[0J
[0J[error]    |   Throwable, Any,[0J
[0J[error]    |   [0J
[0J[error]    |     com.yubico.webauthn.RelyingParty & aephyr.auth.ports.ChallengeStore &[0J
[0J[error]    |       aephyr.auth.ports.UserHandleRepo[0J
[0J[error]    |   ,[0J
[0J[error]    | aephyr.auth.ports.WebAuthnRepo]([0J
[0J[error]    |   aephyr.adapters.security.webauthn.memory.InMemoryWebAuthnRepo.live)([0J
[0J[error]    |   izumi.reflect.Tag.tagFromTagMacro[aephyr.auth.ports.WebAuthnRepo]).++[[0J
[0J[error]    |   Throwable, com.yubico.webauthn.RelyingParty,[0J
[0J[error]    |   [0J
[0J[error]    |     com.yubico.webauthn.RelyingParty & aephyr.auth.ports.ChallengeStore & ([0J
[0J[error]    |       aephyr.auth.ports.UserHandleRepo & aephyr.auth.ports.WebAuthnRepo)[0J
[0J[error]    |   ,[0J
[0J[error]    | aephyr.auth.ports.WebAuthnPlatform]([0J
[0J[error]    |   aephyr.adapters.security.webauthn.yubico.WebAuthnPlatformYubico.layer)([0J
[0J[error]    |   izumi.reflect.Tag.tagFromTagMacro[aephyr.auth.ports.WebAuthnPlatform]).++[[0J
[0J[error]    |   Throwable,[0J
[0J[error]    |   [0J
[0J[error]    |     aephyr.auth.ports.WebAuthnPlatform & aephyr.auth.ports.ChallengeStore & ([0J
[0J[error]    |       aephyr.auth.ports.UserHandleRepo & aephyr.auth.ports.WebAuthnRepo &[0J
[0J[error]    |       zio.Clock)[0J
[0J[error]    |   ,[0J
[0J[error]    |   [0J
[0J[error]    |     com.yubico.webauthn.RelyingParty & aephyr.auth.ports.ChallengeStore & ([0J
[0J[error]    |       aephyr.auth.ports.UserHandleRepo & aephyr.auth.ports.WebAuthnRepo &[0J
[0J[error]    |       aephyr.auth.ports.WebAuthnPlatform)[0J
[0J[error]    |   ,[0J
[0J[error]    | aephyr.auth.application.webauthn.WebAuthnService]([0J
[0J[error]    |   aephyr.auth.application.webauthn.WebAuthnServiceLive.layer)([0J
[0J[error]    |   izumi.reflect.Tag.tagFromTagMacro[[0J
[0J[error]    |     aephyr.auth.application.webauthn.WebAuthnService][0J
[0J[error]    | )[0J
[0J[error]    | I tried to show that[0J
[0J[error]    |   zio.ZLayer[[0J
[0J[error]    |   aephyr.shared.config.AppConfig & com.yubico.webauthn.RelyingParty & ([0J
[0J[error]    |     aephyr.auth.ports.WebAuthnPlatform & aephyr.auth.ports.ChallengeStore) & ([0J
[0J[error]    |     aephyr.auth.ports.UserHandleRepo & aephyr.auth.ports.WebAuthnRepo &[0J
[0J[error]    |     zio.Clock),[0J
[0J[error]    | Throwable, aephyr.auth.ports.UserHandleRepo & aephyr.auth.ports.WebAuthnRepo &[0J
[0J[error]    |   aephyr.auth.ports.WebAuthnPlatform & (com.yubico.webauthn.RelyingParty &[0J
[0J[error]    |   aephyr.auth.ports.ChallengeStore &[0J
[0J[error]    |   aephyr.auth.application.webauthn.WebAuthnService)][0J
[0J[error]    | conforms to[0J
[0J[error]    |   zio.ZLayer[Any, Throwable, aephyr.http.server.wiring.identity.WebAuthnLayers.Env[0J
[0J[error]    |   ][0J
[0J[error]    | but none of the attempts shown below succeeded:[0J
[0J[error]    |[0J
[0J[error]    |   ==> zio.ZLayer[   aephyr.shared.config.AppConfig & com.yubico.webauthn.RelyingParty & (     aephyr.auth.ports.WebAuthnPlatform & aephyr.auth.ports.ChallengeStore) & (     aephyr.auth.ports.UserHandleRepo & aephyr.auth.ports.WebAuthnRepo &     zio.Clock), Throwable, aephyr.auth.ports.UserHandleRepo & aephyr.auth.ports.WebAuthnRepo &   aephyr.auth.ports.WebAuthnPlatform & (com.yubico.webauthn.RelyingParty &   aephyr.auth.ports.ChallengeStore &   aephyr.auth.application.webauthn.WebAuthnService)]  <:  zio.ZLayer[Any, Throwable, aephyr.http.server.wiring.identity.WebAuthnLayers.Env   ][0J
[0J[error]    |     ==> Any  <:  aephyr.shared.config.AppConfig & com.yubico.webauthn.RelyingParty & (   aephyr.auth.ports.WebAuthnPlatform & aephyr.auth.ports.ChallengeStore) & (   aephyr.auth.ports.UserHandleRepo & aephyr.auth.ports.WebAuthnRepo & zio.Clock)[0J
[0J[error]    |       ==> Any  <:  aephyr.shared.config.AppConfig & com.yubico.webauthn.RelyingParty & (   aephyr.auth.ports.WebAuthnPlatform & aephyr.auth.ports.ChallengeStore)[0J
[0J[error]    |         ==> Any  <:  aephyr.shared.config.AppConfig & com.yubico.webauthn.RelyingParty[0J
[0J[error]    |           ==> Any  <:  aephyr.shared.config.AppConfig  = false[0J
[0J[error]    |[0J
[0J[error]    | The tests were made under the empty constraint[0J
[0J[error]     ----------------------------------------------------------------------------[0J
[0J[error] -- [E007] Type Mismatch Error: /Users/martin/Aephyr/aephyr-dev/server/modules/http/server/src/main/scala/aephyr/http/server/wiring/infra/InfraLayers.scala:16:7 [0J
[0J[error] 16 |      (UserReadRepository.layer ++ UserWriteRepository.layer)[0J
[0J[error]    |       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0J
[0J[error]    |Found:    zio.ZLayer[javax.sql.DataSource, Nothing,[0J
[0J[error]    |  aephyr.identity.application.ports.UserReadPort &[0J
[0J[error]    |  aephyr.adapters.db.UserWriteRepository][0J
[0J[error]    |Required: zio.ZLayer[aephyr.shared.config.AppConfig & com.zaxxer.hikari.HikariDataSource,[0J
[0J[error]    |  Throwable, aephyr.shared.config.AppConfig &[0J
[0J[error]    |  aephyr.adapters.db.UserReadRepository & aephyr.adapters.db.UserWriteRepository[0J
[0J[error]    |  ][0J
[0J[error]    |----------------------------------------------------------------------------[0J
[0J[error]    | Explanation (enabled by `-explain`)[0J
[0J[error]    |- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -[0J
[0J[error]    |[0J
[0J[error]    | Tree: aephyr.adapters.db.UserReadRepository.layer.++[Nothing, javax.sql.DataSource,[0J
[0J[error]    |   aephyr.identity.application.ports.UserReadPort,[0J
[0J[error]    |   aephyr.adapters.db.UserWriteRepository]([0J
[0J[error]    |   aephyr.adapters.db.UserWriteRepository.layer)([0J
[0J[error]    |   izumi.reflect.Tag.tagFromTagMacro[aephyr.adapters.db.UserWriteRepository])[0J
[0J[error]    | I tried to show that[0J
[0J[error]    |   zio.ZLayer[javax.sql.DataSource, Nothing,[0J
[0J[error]    |   aephyr.identity.application.ports.UserReadPort &[0J
[0J[error]    |   aephyr.adapters.db.UserWriteRepository][0J
[0J[error]    | conforms to[0J
[0J[error]    |   zio.ZLayer[aephyr.shared.config.AppConfig & com.zaxxer.hikari.HikariDataSource,[0J
[0J[error]    |   Throwable,[0J
[0J[error]    |   aephyr.shared.config.AppConfig & aephyr.adapters.db.UserReadRepository &[0J
[0J[error]    |     aephyr.adapters.db.UserWriteRepository[0J
[0J[error]    | ][0J
[0J[error]    | but none of the attempts shown below succeeded:[0J
[0J[error]    |[0J
[0J[error]    |   ==> zio.ZLayer[javax.sql.DataSource, Nothing,   aephyr.identity.application.ports.UserReadPort &   aephyr.adapters.db.UserWriteRepository]  <:  zio.ZLayer[aephyr.shared.config.AppConfig & com.zaxxer.hikari.HikariDataSource,   Throwable,   aephyr.shared.config.AppConfig & aephyr.adapters.db.UserReadRepository &     aephyr.adapters.db.UserWriteRepository ][0J
[0J[error]    |     ==> aephyr.identity.application.ports.UserReadPort &   aephyr.adapters.db.UserWriteRepository  <:  aephyr.shared.config.AppConfig & aephyr.adapters.db.UserReadRepository &   aephyr.adapters.db.UserWriteRepository[0J
[0J[error]    |       ==> aephyr.identity.application.ports.UserReadPort &   aephyr.adapters.db.UserWriteRepository  <:  aephyr.shared.config.AppConfig & aephyr.adapters.db.UserReadRepository[0J
[0J[error]    |         ==> aephyr.identity.application.ports.UserReadPort &   aephyr.adapters.db.UserWriteRepository  <:  aephyr.shared.config.AppConfig[0J
[0J[error]    |           ==> aephyr.identity.application.ports.UserReadPort  <:  aephyr.shared.config.AppConfig  = false[0J
[0J[error]    |           ==> aephyr.adapters.db.UserWriteRepository  <:  aephyr.shared.config.AppConfig  = false[0J
[0J[error]    |[0J
[0J[error]    | The tests were made under a constraint with:[0J
[0J[error]    |  uninstantiated variables: RIn[0J
[0J[error]    |  constrained types:[0J
[0J[error]    |   [RIn, E, ROut][0J
[0J[error]    |     (self: zio.ZLayer[RIn, E, ROut]):[0J
[0J[error]    |       zio.ZLayer.ZLayerProvideSomeOps[RIn, E, ROut][0J
[0J[error]    |   ,[0J
[0J[error]    |   [E1 >: Throwable, ROut2][0J
[0J[error]    |     (that: =>[0J
[0J[error]    |       zio.ZLayer[[0J
[0J[error]    |         aephyr.shared.config.AppConfig & com.zaxxer.hikari.HikariDataSource,[0J
[0J[error]    |         E1, ROut2][0J
[0J[error]    |     )(implicit trace: zio.Trace): zio.ZLayer[RIn, E1, ROut2][0J
[0J[error]    |  bounds:[0J
[0J[error]    |      RIn >: aephyr.shared.config.DbCfg <: aephyr.shared.config.DbCfg[0J
[0J[error]    |      E := Throwable[0J
[0J[error]    |      ROut := aephyr.shared.config.AppConfig & com.zaxxer.hikari.HikariDataSource[0J
[0J[error]    |      E1 := Throwable[0J
[0J[error]    |      ROut2 := aephyr.shared.config.AppConfig &[0J
[0J[error]    |     aephyr.adapters.db.UserReadRepository &[0J
[0J[error]    |     aephyr.adapters.db.UserWriteRepository[0J
[0J[error]    |  ordering:[0J
[0J[error]    |  co-deps:[0J
[0J[error]    |  contra-deps:[0J
[0J[error]     ----------------------------------------------------------------------------[0J
[0J[error] 21 errors found[0J
[0J[[31merror[0m] Total time: 22 s, completed Sep 5, 2025, 6:11:53 PM
[error] (http-server / Compile / compileIncremental) Compilation failed[0J
[0J[0J