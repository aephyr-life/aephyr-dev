name: KMM CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ "**" ]

concurrency:
  group: kmm-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

env:
  # Keep caches in-repo so cache action can pick them up
  GRADLE_USER_HOME: ${{ github.workspace }}/.gradle
  KONAN_DATA_DIR: ${{ github.workspace }}/.konan
  # Let Gradle fetch toolchains itself
  ORG_GRADLE_PROJECT_org.gradle.java.installations.auto-download: "true"
  ORG_GRADLE_PROJECT_org.gradle.java.installations.auto-detect: "false"

jobs:
  kmm-linux:
    name: Check (Linux)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v27
        with:
          nix_path: nixpkgs=channel:nixos-24.05

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v2

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            .gradle
            ~/.gradle/wrapper
          key: gradle-v3-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/*.kts', '**/gradle-wrapper.properties', '**/gradle/libs.versions.toml') }}
          restore-keys: |
            gradle-v3-${{ runner.os }}-

      - name: Cache Konan (Kotlin/Native)
        uses: actions/cache@v4
        with:
          path: .konan
          key: konan-${{ runner.os }}-${{ hashFiles('**/*.kt', '**/*.kts', '**/build.gradle*', '**/gradle/libs.versions.toml') }}
          restore-keys: |
            konan-${{ runner.os }}-

      - name: Run shared tests/checks (via with-env → nix develop #shared)
        run: |
          ./bin/with-env shared -- just shared test

  kmm-macos-xcframework:
    runs-on: macos-latest
    needs: kmm-linux
    steps:
      - uses: actions/checkout@v4

      # Use Determinate’s installer on macOS
      - name: Install Nix (macOS)
        uses: DeterminateSystems/nix-installer-action@v14
        with:
          extra-conf: |
            experimental-features = nix-command flakes

      # (Optional) great cache for nix
      - name: Magic Nix Cache
        uses: DeterminateSystems/magic-nix-cache-action@v7

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v2

      - name: Select Xcode
        run: |
          sudo xcode-select -s /Applications/Xcode.app
          xcodebuild -version

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/.gradle
          key: gradle-v2-${{ runner.os }}-${{ hashFiles('**/*.gradle*','**/*.kts','**/gradle-wrapper.properties','**/gradle/libs.versions.toml') }}
          restore-keys: gradle-v2-${{ runner.os }}-

      - name: Cache Konan (Kotlin/Native)
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/.konan
          key: konan-v2-${{ runner.os }}-${{ hashFiles('**/*.kt','**/*.kts','**/build.gradle*','**/gradle/libs.versions.toml') }}
          restore-keys: konan-v2-${{ runner.os }}-

      - name: Build XCFramework (Debug) via with-env
        env:
          GRADLE_USER_HOME: ${{ github.workspace }}/.gradle
          KONAN_DATA_DIR:   ${{ github.workspace }}/.konan
        run: |
          set -euxo pipefail
          ./bin/with-env shared -- just shared xc debug
          echo "== After build =="
          ls -lah client/shared/build/XCFrameworks || true
          ls -lah client/shared/build/XCFrameworks/Debug || true
          ls -lah client/ios/Vendor || true
          test -e client/ios/Vendor/AephyrShared.xcframework
          
      - name: Upload XCFramework artifact
        uses: actions/upload-artifact@v4
        with:
          name: AephyrShared.xcframework
          path: client/ios/Vendor/AephyrShared.xcframework
